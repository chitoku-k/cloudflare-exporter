name: CI Workflow
on:
  push:
    branches:
      - master
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build (${{ matrix.target.platform }})
    strategy:
      matrix:
        target:
          - label: ubuntu-24.04
            platform: linux/amd64
            dockerfile: Dockerfile
          - label: windows-2022
            platform: windows/amd64
            dockerfile: Dockerfile.windows
            release: ltsc2022
    runs-on: ${{ matrix.target.label }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into Container Registry
        if: ${{ github.ref_name == 'master' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          build-args: |
            WINDOWS_RELEASE=${{ matrix.target.release }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: ${{ matrix.target.platform }}
          file: ${{ matrix.target.dockerfile }}
          outputs: |
            type=image,push=${{ github.ref_name == 'master' }},push-by-digest=${{ github.ref_name == 'master' }}
          tags: |
            ghcr.io/chitoku-k/cloudflare-exporter
      - name: Save digest
        if: ${{ github.ref_name == 'master' }}
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest=${{ steps.build.outputs.imageid }}
          touch "${{ runner.temp }}/digests/${digest#sha256:}"
      - name: Upload digest
        if: ${{ github.ref_name == 'master' }}
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.target.label }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  combine:
    name: Combine images
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true
      - name: Log into Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create \
            --tag=ghcr.io/chitoku-k/cloudflare-exporter:latest \
            $(printf 'ghcr.io/chitoku-k/cloudflare-exporter@sha256:%s ' *)

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up reviewdog
        uses: reviewdog/action-setup@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v6
        id: build
        with:
          target: dev
          cache-from: type=gha,scope=${{ github.ref_name }}-test
          cache-to: type=gha,scope=${{ github.ref_name }}-test,mode=max
          load: true
      - name: Run golangci-lint
        if: ${{ always() && steps.build.conclusion == 'success' }}
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --rm ${{ steps.build.outputs.imageid }} golangci-lint run --output.text.path=stdout |
            reviewdog -f=golangci-lint -reporter=github-pr-annotations -filter-mode=nofilter -fail-level=any -tee
